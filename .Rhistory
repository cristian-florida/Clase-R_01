# Definir el número de bloques (parcelas)
bloques <- 3  # Número de bloques
# Generar el diseño en bloques completos al azar (DBCA)
dbca_experimento <- design.ab(trt=factores, r=bloques, seed=123)
# Mostrar el diseño experimental
print(dbca_experimento$book)
agricolae::design.ab(trt, r, serie = 2, design=c("rcbd","crd","lsd")
# Definir los niveles de los factores
dosis_fertilizante <- c(50, 100, 150)  # Dosis de fertilizante (kg/ha)
variedades_papa <- c("Canchán", "Peruanita")  # Variedades de papa
# Definir el número de bloques (repeticiones)
bloques <- 3
# Generar el diseño factorial con el método AB (combinación de dos factores)
diseño_factorial <- design.ab(trt1=dosis_fertilizante, trt2=variedades_papa, r=bloques, serie=2, design="rcbd")
# Mostrar el diseño experimental
print(diseño_factorial$book)
agricolae::design.ab(trt, r, serie = 2, design=c("rcbd","crd","lsd")
outdesign <-design.ab(trt, r=5, serie=2)
book<-outdesign$book
head(book,10) # print of the field book
# Cargar el paquete
library(agricolae)
# Definir los niveles de los factores
dosis_fertilizante <- c(50, 100, 150)  # Dosis de fertilizante en kg/ha
variedades_papa <- c("Canchán", "Peruanita")  # Variedades de papa
trt<-c(3,2) # factorial 3x2
outdesign <-design.ab(trt, r=5, serie=2)
book<-outdesign$book
head(book,10) # print of the field book
library(tidyverse)
git ad
git add
git comif
git comid
git remote add origin https://github.com/tu_usuario/tu_repositorio.git
git initFieldArgs
git init
data <- read_excel("eficiencia de riego papa.xlsx")
library(readxl)
data <- read_excel("eficiencia de riego papa.xlsx")
library(readxl)
data <- read_excel("eficiencia de riego papa.xlsx")
library(readxl)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
modelo <- lm(formula = lfa ~ block + geno + riego + riego*geno
, data = fb)
modelo <- lm(formula = lfa ~ block + geno + riego + riego*geno, data = data)
anova(modelo)
# Box plot con colores y puntos de datos
ggplot(data, aes(x = block, y = lfa, fill = block)) +
geom_boxplot(outlier.colour = "blue", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
theme_minimal()
install.packages("ggplot2")
install.packages("ggplot2")
library (ggplot2)
install.packages("ggplot2")
library (ggplot2)
ggplot(data, aes(x = block, y = lfa, fill = block)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
theme_minimal()
ggplot(data, aes(x = block, y = lfa, fill = block)) +
geom_boxplot(outlier.colour = "green", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
theme_minimal(base_s)
ggplot(data, aes(x = factor(geno), y = lfa, fill = factor(geno))) +
geom_boxplot() +
labs(title = "Box Plot de lfa por Genotipo", x = "Genotipo", y = "lfa") +
theme_minimal()
ggplot(data, aes(x = factor(geno), y = lfa, fill = factor(geno))) +
geom_boxplot() +
labs(title = "Box Plot de lfa por Genotipo", x = "Genotipo", y = "lfa") +
theme_minimal()
install.packages("ggplot2")
library (ggplot2)
ggplot(data, aes(x = block, y = lfa, fill = block)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
theme_minimal()
ggplot(data, aes(x = factor(geno), y = lfa, fill = factor(geno))) +
geom_boxplot() +
labs(title = "Box Plot de lfa por Genotipo", x = "Genotipo", y = "lfa") +
theme_minimal()
ggplot(data, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(title = "Box Plot de lfa por Genotipo", x = "Genotipo", y = "lfa") +
theme_minimal()
install.packages("pkgdown")
install.packages("pkgdown")
usethis::use_pkgdown_github_pages()
install.packages("pkgdown")
# Preview your site locally before publishing
pkgdown::build_site()
install.packages("pkgdown")
usethis::use_pkgdown_github_pages()
install.packages("pkgdown")
install.packages("pkgdown")
install.packages("pkgdown")
# Run once to configure your package to use and deploy pkgdown
usethis::use_pkgdown_github_pages()
1 + 1
#| echo: false
2 * 2
library(readxl)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
modelo <- lm(formula = lfa ~ block + geno + riego + riego*geno, data = data)
anova(modelo)
install.packages("ggplot2")
library (ggplot2)
ggplot(data, aes(x = block, y = lfa, fill = block)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
theme_minimal()
ggplot(data, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(title = "Box Plot de lfa por Genotipo", x = "Genotipo", y = "lfa") +
theme_minimal()
# Run once to configure your package to use and deploy pkgdown
usethis::use_pkgdown_github_pages()
1 + 1
#| echo: false
2 * 2
library(readxl)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
modelo <- lm(formula = lfa ~ block + geno + riego + riego*geno, data = data)
anova(modelo)
install.packages("ggplot2")
library (ggplot2)
ggplot(data, aes(x = block, y = lfa, fill = block)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
theme_minimal()
ggplot(data, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(title = "Box Plot de lfa por Genotipo", x = "Genotipo", y = "lfa") +
theme_minimal()
install.packages("pkgdown")
install.packages("pkgdown")
install.packages("pkgdown")
# Preview your site locally before publishing
pkgdown::build_site()
library(openxlsx)
data_de_tesis_prof <- openxlsx::read.xlsx("LA MOLINA 2014 POTATO WUE (FB).xlsx", sheet = "fb")
anova(modelo)
```{r}
#cargamos el paquete ggplot2
library(ggplot2)
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
# Crear un boxplot para visualizar los efectos de geno y riego
ggplot(data_de_tesis_prof, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
geom_boxplot() +
labs(x = "Genotipo", y = "LFA (Respuesta)", fill = "Riego") +
theme_minimal() +
ggtitle("Boxplot de LFA por Genotipo y Tratamiento de Riego")
library(agricolae)
library(agricolae)
library(readxl)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
# Cambia 'Tratamiento' y 'Valor' según los nombres de tus columnas
modelo <- aov(Valor ~ Tratamiento, data = data)
library(agricolae)
data
data
<- read_excel("eficiencia de riego papa.xlsx")
library(agricolae)
data
data
# Cambia 'Tratamiento' y 'Valor' según los nombres de tus columnas
modelo <- aov(Valor ~ Tratamiento, data = data)
colnames(data)
# Ajusta 'spad_29' y 'riego' según la variable de respuesta y el tratamiento que deseas analizar
modelo <- aov(spad_29 ~ riego, data = data)
summary(modelo)
# Análisis de Tukey
tukey_result <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_result)
# Graficar los grupos de medias del análisis de Tukey
plot(tukey_result, main = "Análisis de Tukey - Comparación de Tratamientos de Riego en Papa",
xlab = "Tratamientos de Riego", ylab = "Media de SPAD 29")  # Cambia SPAD 29 por la variable que estés usando
# Asegúrate de que la variable de tratamiento es un factor
data$riego <- as.factor(data$riego)
# Ajuste del modelo
modelo <- aov(spad_29 ~ riego, data = data)  # Cambia spad_29 por otra variable si es necesario
summary(modelo)
tukey_result <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_result)
Crear el boxplot
ggplot(data, aes(x = factor(riego), y = spad_29)) +  # Cambia spad_29 según la variable de interés
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs
library(ggplot2)
# Crear el boxplot
ggplot(data, aes(x = factor(riego), y = spad_29)) +  # Asegúrate de que "spad_29" sea el nombre correcto
geom_boxplot(fill = "lightblue", color = "darkblue") +
xlab("Tratamiento de Riego") +
ylab("Valores de SPAD 29") +
ggtitle("Distribución de SPAD 29 por Tratamientos de Riego") +
theme_minimal()
()
library(ggplot2)
# Crear el boxplot
ggplot(data, aes(x = factor(riego), y = spad_29)) +  # Asegúrate de que "spad_29" sea el nombre correcto
geom_boxplot(fill = "lightblue", color = "darkblue") +
xlab("Tratamiento de Riego") +
ylab("Valores de SPAD 29") +
ggtitle("Distribución de SPAD 29 por Tratamientos de Riego") +
theme_minimal(base_rect_size = )
()
# Cargar librerías si es necesario
library(ggplot2)
# Crear el boxplot
ggplot(data, aes(x = factor(riego), y = spad_29)) +  # Asegúrate de que "spad_29" sea el nombre correcto
geom_boxplot(fill = "lightblue", color = "darkblue") +
xlab("Tratamiento de Riego") +
ylab("Valores de SPAD 29") +
ggtitle("Distribución de SPAD 29 por Tratamientos de Riego") +
theme_minimal()  # Elimina el argumento base_rect_size que no está definido
()
# Cargar librerías si es necesario
library(ggplot2)
# Crear el boxplot
ggplot(data, aes(x = factor(riego), y = spad_83)) +  # Asegúrate de que "spad_29" sea el nombre correcto
geom_boxplot(fill = "lightblue", color = "darkblue") +
xlab("Tratamiento de Riego") +
ylab("Valores de SPAD 29") +
ggtitle("Distribución de SPAD 29 por Tratamientos de Riego") +
theme_minimal()  # Elimina el argumento base_rect_size que no está definido
()
# Cargar librerías si es necesario
library(ggplot2)
# Crear el boxplot
ggplot(data, aes(x = factor(riego), y = spad_83)) +  # Asegúrate de que "spad_29" sea el nombre correcto
geom_boxplot(fill = "lightblue", color = "darkblue") +
xlab("Tratamiento de Riego") +
ylab("Valores de SPAD 29") +
ggtitle("Distribución de SPAD 83 por Tratamientos de Riego") +
theme_minimal()  # Elimina el argumento base_rect_size que no está definido
()
str(object = )
# Cargar librerías si es necesario
library(ggplot2)
# Crear el boxplot
ggplot(data, aes(x = factor(riego), y = spad_83)) +  # Asegúrate de que "spad_29" sea el nombre correcto
geom_boxplot(fill = "lightblue", color = "darkblue") +
xlab("Tratamiento de Riego") +
ylab("Valores de SPAD 29") +
ggtitle("Distribución de SPAD 83 por Tratamientos de Riego") +
theme_minimal()  # Elimina el argumento base_rect_size que no está definido
ggplot(datos, aes(x = Cultivar, y = Eficiencia)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Eficiencia de Riego en Cultivares de Papa",
x = "Cultivar",
y = "Eficiencia (%)") +
theme_minimal()
library(ggplot2)
library(readxl)
library(ggplot2)
head(datos)  # Muestra las primeras filas del dataset
data
ggplot(datos, aes(x = Cultivar, y = Eficiencia)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Eficiencia de Riego en Cultivares de Papa",
x = "Cultivar",
y = "Eficiencia (%)") +
theme_minimal()
### Gráfico en ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(readxl)
library(ggplot2)
data
data
### Gráfico en ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
### Gráfico en ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Asegúrate de que los paquetes están cargados
library(readxl)
library(ggplot2)
# Cargar los datos en el objeto mc (asegúrate de ajustar el archivo y la hoja correctos)
mc <- read_excel()  # Reemplaza con la ruta correcta del archivo
# Asegúrate de que los paquetes están cargados
library(readxl)
library(ggplot2)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
### Gráfico en ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data <- read_excel("eficiencia de riego papa.xlsx")
# Asegúrate de que los paquetes están cargados
library(readxl)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
### Gráfico en ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
head(data)
# Verificar la estructura
str(mc)
# Asegúrate de que los paquetes están cargados
library(readxl)
library(ggplot2)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
# Verificar la estructura
str(data)
### Gráfico en ggplot2
ggplot(data, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
### Gráfico en ggplot2
ggplot(data, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Asegúrate de que los paquetes están cargados
library(readxl)
library(ggplot2)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
# Verificar la estructura
str(data)
### Gráfico en ggplot2
ggplot(data, aes(x = data, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
### Gráfico en ggplot2
ggplot(mc, aes(x = geno, y = lfa, fill = riego)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(lfa, 1)), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
### Gráfico en ggplot2
ggplot(data, aes(x = geno, y = lfa, fill = riego)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(lfa, 1)), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("emmeans")
library(emmeans)
install.packages("ggplot2")
library (ggplot2)
ggplot(data, aes(x = block, y = lfa, fill = block)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
theme_minimal()
install.packages("ggplot2")
install.packages("ggplot2")
library (ggplot2)
library (ggplot2)
ggplot(data, aes(x = block, y = lfa, fill = block)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
theme_minimal()
install.packages("pkgdown")
# Run once to configure your package to use and deploy pkgdown
usethis::use_pkgdown_github_pages()
# Cargar librerías si es necesario
library(ggplot2)
# Crear el boxplot
ggplot(data, aes(x = factor(riego), y = spad_83)) +  # Asegúrate de que "spad_29" sea el nombre correcto
geom_boxplot(fill = "lightblue", color = "darkblue") +
xlab("Tratamiento de Riego") +
ylab("Valores de SPAD 29") +
ggtitle("Distribución de SPAD 83 por Tratamientos de Riego") +
theme_minimal()  # Elimina el argumento base_rect_size que no está definido
install.packages("emmeans")
library(emmeans)
tukey_result <- HSD.test(modelo, "riego", group = TRUE)
# Asegúrate de que la variable de tratamiento es un factor
data$riego <- as.factor(data$riego)
# Ajuste del modelo
modelo <- aov(spad_29 ~ riego, data = data)  # Cambia spad_29 por otra variable si es necesario
summary(modelo)
install.packages("ggplot2", repos = "https://cloud.r-project.org/")
install.packages("pkgdown", repos = "https://cloud.r-project.org/")
install.packages("pkgdown", repos = "https://cloud.r-project.org/")
install.packages("pkgdown", repos = "https://cloud.r-project.org/")
install.packages("pkgdown", repos = "https://cloud.r-project.org/")
# Run once to configure your package to use and deploy pkgdown
usethis::use_pkgdown_github_pages()
# Run once to configure your package to use and deploy pkgdown
usethis::use_pkgdown_gh repo clone cristian-florida/Clase-R_01_pages()
# Run once to configure your package to use and deploy pkgdown
usethis::use_pkgdown_github_pages()
# Run once to configure your package to use and deploy pkgdown
usethis::use_pkgdown
install.packages("pkgdown")
options(repos = c(CRAN = "https://cloud.r-project.org/"))
# Asegúrate de que los paquetes están cargados
library(readxl)
library(ggplot2)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
# Verificar la estructura
str(data)
### Gráfico en ggplot2
ggplot(data, aes(x = geno, y = lfa, fill = riego)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(lfa, 1)), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("emmeans")
library(emmeans)
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
### Gráfico en ggplot2
{r}
### Gráfico en ggplot2
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
### Gráfico en ggplot2
ggplot(data, aes(x = variedad, y = lfa, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Variedad", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
### Gráfico en ggplot2
ggplot(data, aes(x = geno, y = lfa, fill = riego)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(lfa, 1)), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
### Gráfico en ggplot2
ggplot(data, aes(x = geno, y = lfa, fill = riego)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(lfa, 1)), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Asegúrate de que los paquetes están cargados
library(readxl)
library(ggplot2)
data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
# Verificar la estructura
str(data)
### Gráfico en ggplot2
ggplot(data, aes(x = geno, y = lfa, fill = riego)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(lfa, 1)), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data, aes(x = geno, y = lfa, fill = riego)) +
geom_col(position = position_dodge()) +
geom_text(aes(label = round(lfa, 1)), position = position_dodge(0.9), vjust = -0.5) +
labs(x = "Geno", y = "LFA", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
