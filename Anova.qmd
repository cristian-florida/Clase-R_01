---
title: "Florida_web"
author: "Cristian Ruben Florida Garcia"
format:
  html:
   toc: true
   toc-location: left
   embed-resources: true
   number-sections: true
   output-file: index
   theme: darkly
editor_options: 
  chunk_output_type: consolex
---

# 1° llamamos a la base de datos

## A) Lectura de datos desde google shets

```{r}
# Cargar el script desde inkaverse
source('https://inkaverse.com/setup.r')

# URL de la hoja de cálculo de Google Sheets
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- as_sheets_id(url)

fb <- gs %>%
  range_read("fb")

View(fb)

1# Mostrar la estructura de 'fb'
str(fb)

```

## Lectura de datos desde la base de datos del proyecto

```{r}
library(readxl)

data <- read_excel("eficiencia de riego papa.xlsx")
head(data)
```

# Modelo lineal

```{r}
modelo <- lm(formula = lfa ~ block + geno + riego + riego*geno, data = data)
 

anova(modelo)

```

# Blox plot

```{r}
  install.packages("ggplot2", repos = "https://cloud.r-project.org/")

library (ggplot2)
ggplot(data, aes(x = block, y = lfa, fill = block)) +
  geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +  # Personaliza los outliers
  geom_jitter(width = 0.2, alpha = 0.5) +  # Añade puntos de datos con un poco de dispersión
  labs(title = "Box Plot de lfa por Block", x = "Block", y = "lfa") +
  theme_minimal()

```

#Grafico

```{r}

```

```{r}

```

## 2- Comparación de medias

```{r}
options(repos = c(CRAN = "https://cloud.r-project.org/"))
install.packages("agricolae")
```

```{r}
library(agricolae)
# test de Tukey para el factor de riego
tukey_riego <- HSD.test(modelo,"riego", group = TRUE)
print (tukey_riego)
```

```{r}
# Test de Tukey para el factor geno
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)
```

```{r}
# Test de Tukey para la interacción riego:geno
tukey_interaccion <- HSD.test(modelo,c("riego", "geno"), group = TRUE) 
print(tukey_interaccion)
str(tukey_interaccion)
```

```{r}
library(tidyverse)
library(dplyr)
library(tidyr)
library(purrr)
library(stringr)
```

```{r}
mc <- tukey_interaccion$groups%>%
  rownames_to_column("tr at")%>%
  separate(`tr at`, c("riego", "geno"))
str(mc)
```

## Gráfica en ggplot 2

```{r}
ggplot(mc, aes(x = geno, y = lfa, fill = riego)) + 
  geom_bar(stat = "identity", position = position_dodge()) + 
  geom_text(aes(label = groups), position = position_dodge(0.9), vjust = -0.5) + 
  labs(x = "variedad", y = "LFA", fill = "Riego") + 
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Comparación de Medias: emmeans

```{r}
library(emmeans)
mc <- emmeans(modelo, ~ riego * geno)
mc <- emmeans(modelo, ~ riego | geno)
mc <- emmeans(modelo, ~ geno | riego) %>% 
  as.data.frame()

mc

```

### Plot

```{r}
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  labs(x = "Variedad", y = "LFA", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

# Análisis Multivariado

## Correlación

### 1° Examinamos los datos y verificamos si no existen valores faltantes o atípicos.

```{r}
# Comprobar si hay valores NA (faltantes)
sum(is.na(data))
# Estadísticas descriptivas
summary(data)
```

### 2° Escogemos las variables para el análisis de evaluación

```{r}

# O usa un conjunto de datos de ejemplo para probar (como mtcars)
data <- mtcars

# Verifica que 'data' esté correctamente cargado
print(data)

# Seleccionar solo las variables numéricas
data_numeric <- data[, sapply(data, is.numeric)]

# Verifica que 'data_numeric' no esté vacío
print(data_numeric)

# Crear matriz de correlación
correlation_matrix <- cor(data_numeric, method = "pearson")
print(correlation_matrix)

```

```{r}
# Seleccionamos solo las variables numéricas
data_numeric <- data[, sapply(data, is.numeric)]
# Creamos una matriz de correlación
correlation_matrix <- cor(data_numeric, method = "pearson")
print(correlation_matrix)

```

### Vizualización de la matriz evaluada

```{r}
library(psych)

fb %>% 
  select_if(is.numeric) %>% 
  dplyr::select(!c("block")) %>% 
  pairs.panels(x = .
               , hist.col="red"
               , pch = 21
               , stars = TRUE
               , scale = FALSE
               , lm = TRUE
               ) 
```

#### PCA:**Análisis de componentes principales**

```{r}
library(FactoMineR)

mv <- fb %>% 
  group_by(riego, geno) %>% 
  summarise(across(where(is.numeric), ~ mean(., na.rm = TRUE))) %>% 
  PCA(scale.unit = T, quali.sup = c(1:4), graph = F)


p1 <- plot(mv
     , choix="ind"
     , habillage=1
     , label = "ind"
     )


p2 <- plot(mv
     , choix="var")

list(p1, p2) %>% 
  plot_grid(plotlist = ., nrow = 1)
```
